{"version":3,"sources":["reportWebVitals.js","Components/mainstyle.js","Components/Provider/MainContent.js","Components/Provider/MainContentProvider.js","Components/Left/Categories/CategoriesStyle.js","Components/Left/Categories/Categories.js","Components/Center/Upcoming/UpcomingStyle.js","Components/Center/Upcoming/Upcoming.js","Components/Center/Circular/CircularStyle.js","Components/Center/Circular/Circular.js","Components/Center/Alltasks/AlltasksStyle.js","Components/Center/Alltasks/Alltasks.js","Components/Right/AllDates/AllDatesStyle.js","Components/Right/AllDates/AllDates.js","Components/main.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","MainS","styled","div","Container","Left","Center","Right","MainContent","React","createContext","ContentProvider","children","current_time","Date","activeHour","getHours","activeMinute","getMinutes","s","console","log","useState","General","name","tasks_count","color","tasks","0","task_name","time","date","getDate","category","done","key","1","2","Meeting","3","Trip","state","setState","alltasks","Object","values","forEach","item","i","j","push","sort","a","b","parseInt","Provider","value","addCategories","data","db","getDone","cat","CateBlock","ColorVBar","CategDetail","CreateTaskBtn","button","CreateForm","Form","form","Cate_frames","props","style","borderLeft","className","Categories","activeDate","activeMonth","getMonth","activeYear","getFullYear","errorMessagename","setErrorname","errorMessagemain","setErrormain","daysInCurrentMonth","pop","setPop","setForm","useContext","categories","colors","dates","handleForm","field","e","preventDefault","length","validateField","target","Fragment","map","type","onChange","placeholder","htmlFor","id","onClick","temp","validateForm","UpcomingFrame","UpcomingBlock","backcolor","UpcomingCard","activeD","day","icons","getDay","Upcoming","filter","backc","CircularFrame","Details","Det","width","height","backgroundColor","borderRadius","percent","Circular","getcount","count","total","element","strokeWidth","styles","buildStyles","pathColor","trailColor","Math","floor","AllFrame","Task","Tasks","strike","disabled","donefn","Alltasks","donfn","todaynst","todayst","AllDateFrame","DateFrame","backco","colorday","CallFrameBlock","CalFrame","cate","Dates","actfn","act","AllDates","active","setActive","datetasks","setAct","Main","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.151c55df.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import styled from \"styled-components\";\n\nexport const MainS = styled.div`\n    height:100vh;\n    width:100vw;\n    background-color:rgb(231,235,239);\n    display:flex;\n    flex-direction:row;\n    justify-content:center;\n    align-items:center;\n`;\n\nexport const Container = styled.div`\n    height:70vh;\n    width:70vw;\n    min-height:574.688px;\n    min-width:1008px;\n    // background-color:red;\n    display:flex;\n    flex-direction:row;\n    justify-content:space-around;\n`;\n\nexport const Left = styled.div`\n    height:100%;\n    width:30%;\n    // background-color:pink;\n`;\n\nexport const Center = styled.div`\n    height:100%;\n    width:30%;\n    // background-color:pink;\n`;\n\nexport const Right = styled.div`\n    height:100%;\n    width:30%;\n    // background-color:pink;\n`;","import React from 'react';\n\nconst MainContent = React.createContext({});\nexport default MainContent;","import React, { useState } from 'react';\nimport MainContent from './MainContent';\n\nconst ContentProvider = ({children}) =>{\n\n    // const colors = [\"#306CDE\",\"#DD6230\",\"#1FC0C0\"];\n    const current_time  =new Date();\n    const activeHour = current_time.getHours();\n    const activeMinute = current_time.getMinutes();\n\n    let s = (activeHour<10 ? \"0\"+(activeHour):activeHour)+\n                    \":\"+(activeMinute<10?\"0\"+(activeMinute):activeMinute);\n\n                    console.log(s)\n    \n    const [state,setState] = useState({\n        General:{\n            name:'General',\n            tasks_count:3,\n            color:\"#306CDE\",\n            tasks:{\n                0:{\n                    task_name:\"Water the plants\",\n                    time:(activeHour<10+1 ? \"0\"+(activeHour+1):activeHour+1)+\n                    \":\"+(activeMinute<10?\"0\"+(activeMinute):activeMinute),\n                    date:new Date().getDate(),\n                    category:\"General\",\n                    done:false,\n                    key:0\n                },\n                1:{\n                    task_name:\"Dinner with Marie\",\n                    time:(activeHour<10 ? \"0\"+(activeHour):activeHour)+\n                    \":\"+(activeMinute<10?\"0\"+(activeMinute):activeMinute),\n                    date:new Date().getDate()+1,\n                    category:\"General\",\n                    done:false,\n                    key:1\n                },\n                2:{\n                    task_name:\"Dog Food\",\n                    time:(activeHour<10? \"0\"+(activeHour+2):activeHour)+\n                    \":\"+(activeMinute<10+2?\"0\"+(activeMinute+2):activeMinute+2),\n                    date:new Date().getDate()+2,\n                    category:\"General\",\n                    done:false,\n                    key:2\n                }\n            }\n        },\n        Meeting:{\n            name:'Meeting',\n            tasks_count:4,\n            color:\"#DD6230\",\n            tasks:{\n                0:{\n                    task_name:\"Deploy project\",\n                    time:(activeHour<10 ? \"0\"+(activeHour):activeHour)+\n                    \":\"+(activeMinute<10?\"0\"+(activeMinute):activeMinute),\n                    date:new Date().getDate(),\n                    category:\"Meeting\",\n                    done:false,\n                    key:0\n                },\n                1:{\n                    task_name:\"Office Meeting\",\n                    time:(activeHour<10 ? \"0\"+(activeHour):activeHour)+\n                    \":\"+(activeMinute<10?\"0\"+(activeMinute):activeMinute),\n                    date:new Date().getDate()+1,\n                    category:\"Meeting\",\n                    done:false,\n                    key:1\n                },\n                2:{\n                    task_name:\"Project discussion\",\n                    time:(activeHour<10 ? \"0\"+(activeHour):activeHour)+\n                    \":\"+(activeMinute<10?\"0\"+(activeMinute):activeMinute),\n                    date:new Date().getDate()+2,\n                    category:\"Meeting\",\n                    done:false,\n                    key:2\n                },\n                3:{\n                    task_name:\"Meeting with Harry\",\n                    time:(activeHour-2<10 ? \"0\"+(activeHour-2):activeHour-2)+\n                    \":\"+(activeMinute<10?\"0\"+(activeMinute):activeMinute),\n                    date:new Date().getDate()+3,\n                    category:\"Meeting\",\n                    done:false,\n                    key:3\n                }\n            }\n        },\n        Trip:{\n            name:'Trip',\n            tasks_count:3,\n            color:\"#1FC0C0\",\n            tasks:{\n                0:{\n                    task_name:\"Ride with Friends\",\n                    time:(activeHour<10 ? \"0\"+(activeHour):activeHour)+\n                    \":\"+(activeMinute<10?\"0\"+(activeMinute):activeMinute),\n                    date:new Date().getDate()+4,\n                    category:\"Trip\",\n                    done:false,\n                    key:0\n                },\n                1:{\n                    task_name:\"Visit Uncle\",\n                    time:(activeHour<10 ? \"0\"+(activeHour):activeHour)+\n                    \":\"+(activeMinute<10?\"0\"+(activeMinute):activeMinute),\n                    date:new Date().getDate(),\n                    category:\"Trip\",\n                    done:false,\n                    key:1\n                },\n                2:{\n                    task_name:\"Visit Henry\",\n                    time:(activeHour-1<10 ? \"0\"+(activeHour-1):activeHour-1)+\n                    \":\"+(activeMinute<10?\"0\"+(activeMinute):activeMinute),\n                    date:new Date().getDate(),\n                    category:\"Trip\",\n                    done:true,\n                    key:2\n                }\n            }\n        }\n    });\n\n    let alltasks = [];\n    Object.values(state).forEach((item,i)=>{\n        Object.values(item.tasks).forEach((item,j)=>{\n            // if(!item.done){\n            alltasks.push(item);\n            // }\n        })\n\n    });\n\n    alltasks = alltasks.sort(function(a,b){\n        if(parseInt(a.date)>parseInt(b.date)){\n            return 1;\n        }\n\n        if(parseInt(a.date)<parseInt(b.date)){\n            return -1;\n        }\n\n        if(parseInt(a.date)===parseInt(b.date)){\n            if(a.time>b.time){\n                return 1;\n            }\n            if(a.time<b.time){\n                return -1;\n            }\n        }\n        // return parseInt(a.date)-parseInt(b.date);\n        return 0;\n        \n    });\n\n    // console.log(alltasks);\n\n\n    const addCategories =(key,data) => {\n        // data[\"done\"] = false;\n        // data[\"key\"] = state[key].tasks_count;\n        // console.log(data)\n        setState(db=>{\n            return ({\n            ...db,\n            [key]:{\n                ...db[key],\n                tasks_count:db[key].tasks_count+1,\n                tasks:{\n                    ...db[key].tasks,\n                    [db[key].tasks_count]:data,\n                    // [db[key].tasks[\"key\"]]:db[key].tasks_count\n                    \n                },\n                \n            }\n        })});\n    }\n\n    \n\n    const getDone = (cat,key) => {\n        console.log(key);\n        setState(db=>{\n            return({\n                ...db,\n                [cat]:{\n                    ...db[cat],\n                    tasks_count:db[cat].tasks_count-1,\n                    tasks:{\n                        ...db[cat].tasks,\n                        [key]:{\n                            ...db[cat].tasks[key],\n                            done:true,\n                        }\n                    }\n                }\n\n            })\n        })\n    }\n\n    console.log(state);\n\n    return (\n        <MainContent.Provider value={{state,addCategories,alltasks,getDone}}>\n            {children}\n        </MainContent.Provider>\n    )\n}\n\nexport default ContentProvider;","import styled from \"styled-components\";\n\nexport const CateBlock = styled.div`\n    width:100%;\n    display:flex;\n    height:75px;\n    flex-direction:row;\n    justify-content:flex-start;\n    background-color:rgb(247,246,248);\n    padding:10px;\n    border-radius:10px;\n    margin-bottom:5%;\n\n    transform:scale(1);\n    transition: all .2s ease-in-out;\n\n    :hover{\n        transform:scale(1.05);\n        box-shadow: 0px 5px 10px 10px rgb(196,205,221);\n    }\n`;\n\nexport const ColorVBar = styled.div`\n    height:100%;\n    // border-left:8px solid red;\n    border-radius:30px;\n`;\n\nexport const CategDetail = styled.div`\n    height:100%;\n    display:flex;\n    flex-direction:column;\n    padding:0px 7px;\n\n    p.cate_name{\n        font-weight:bold;\n        font-size:23px;\n    }\n\n    p.task_count{\n        padding:7px 0px;\n        color:grey;\n    }\n\n`;\n\nexport const CreateTaskBtn = styled.button`\n    width:100%;\n    background-color:#306CDE;\n    border:none;\n    color:white;\n    padding:15px 3px;\n    border-radius:10px;\n    font-weight:bold;\n    font-size:15px;\n\n    p i span{\n        font-family:Arial;\n    }\n`;\n\nexport const CreateForm = styled.div`\n    width:100%;\n    background-color:rgb(247,246,248);\n    // height:300px;\n    padding:20px 10px;\n    display:flex;\n    flex-direction:column;\n    justify-content:center;\n    align-items:center;\n    border-radius:10px;\n    margin-bottom:2%;\n\n\n    // form{\n    //     display:flex;\n    //     flex-direction:column;\n    //     width:90%;\n\n    //     input{\n    //         line-height:35px;\n            \n    //         border:none;\n    //         border-radius:5px;\n    //         padding:5px; \n    //     }\n\n    //     input:not(:last-child){\n    //         margin-bottom:5%;\n    //     }\n\n    //     input[type=\"submit\"]{\n    //         background-color:yellowgreen;\n    //     }\n\n    //     label{\n    //         font-size:15px;\n    //         color:grey;\n    //         margin-bottom:5px; \n\n    //     }\n\n    //     select{\n    //         border:none;\n    //         height:45px;\n    //         margin-bottom:5%;\n    //     }\n    // }\n    \n\n`;\n\nexport const Form = styled.form`\n    display:flex;\n    flex-direction:column;\n    width:90%;\n\n    input{\n        line-height:35px;\n        \n        border:none;\n        border-radius:5px;\n        padding:5px; \n    }\n\n    div:not(:last-child){\n        margin-bottom:5%;\n    }\n\n    input[type=\"submit\"]{\n        background-color:yellowgreen;\n    }\n\n    label{\n        font-size:15px;\n        color:grey;\n        margin-bottom:5px; \n\n    }\n\n    select{\n        border:none;\n        height:45px;\n        margin-bottom:5%;\n    }\n\n    .invalid{\n        border:1px solid red;\n    }\n\n    .error{\n        color:red;\n    }\n`;","import React, { useContext , useState, useRef} from 'react';\nimport MainContent from '../../Provider/MainContent';\nimport { CateBlock,ColorVBar,CategDetail,CreateTaskBtn,CreateForm,Form } from './CategoriesStyle';\n\n\n\n\n\nconst Cate_frames = (props) => {\n    return(\n        <CateBlock>\n            <ColorVBar style={{borderLeft:'8px solid'+props.color}}></ColorVBar>\n            <CategDetail>\n                <p className=\"cate_name\">{props.name}</p>\n                <p className=\"task_count\">{props.tasks_count} tasks</p>\n            </CategDetail>\n        </CateBlock>\n    )\n}\n\n\nconst Categories = () => {\n\n    const current_time = new Date();\n    let activeDate = current_time.getDate();\n    let activeMonth = current_time.getMonth();\n    let activeYear = current_time.getFullYear();\n    const[errorMessagename,setErrorname] = useState(\"\");\n    const[errorMessagemain,setErrormain] = useState(\"\");\n\n    const daysInCurrentMonth = 40 - new Date(activeYear,activeMonth,40).getDate();\n\n    // const name = useRef('');\n    // const data = useRef(new Date());\n    const [pop,setPop] = useState(false); \n    const [form,setForm] = useState({\n        task_name:\"\",\n        time:\"\",\n        date:\"\",\n        category:\"\",\n        done:false\n    });\n\n    const db = useContext(MainContent);\n    const categories = db.state;\n\n    const colors = [\"#306CDE\",\"#DD6230\",\"#1FC0C0\"];\n    const dates = [];\n    \n    for(let i=0;i<5;i++){\n        dates.push((activeDate+i===daysInCurrentMonth?daysInCurrentMonth:(activeDate+i)%(daysInCurrentMonth)));\n    }\n    \n\n    const validateField =(field)=>{\n        \n         switch (field){\n            case \"task_name\":\n                if(form.task_name.length<=3){\n                    setErrorname(\"Min 3 Characters\")\n                }else{\n                    setErrorname(\"\");\n                }\n                break;\n         }\n\n    }\n\n    const handleForm = (field) => (e) => {\n        e.preventDefault();\n        validateField(field);\n        setForm((s)=>({\n            ...s,\n            [field]:e.target.value,\n        }))\n\n        if(field===\"category\"){\n            console.log(categories[e.target.value].tasks_count)\n            setForm((s)=>({\n                ...s,\n                key:categories[e.target.value].tasks_count\n            }))\n        }\n\n\n        // console.log(form);\n    }\n\n\n    const handlePopup = (field) => {\n        setPop(!pop);\n        // console.log(pop);\n    }\n    const validateForm = () => {\n        let temp = Object.values(form);\n        for(let i=0;i<temp.length;i++){\n            // console.log\n            if(temp[i].length===0 || temp[i]===\"--\"){\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n\n    const FormSubmit=(e)=>{\n        e.preventDefault();\n\n        if(validateForm()){\n            setPop(!pop);\n            db.addCategories(form.category,form);\n        }else{\n            setErrormain(\"Please fill up the form\")\n        }\n        // validateForm();\n        console.log(form)\n    }\n\n    return (\n        <React.Fragment>\n            {Object.values(categories).map((item,i)=>{\n                return (\n                    <Cate_frames key= {i} name={item.name} tasks_count={item.tasks_count} color={colors[i]}></Cate_frames>\n             )\n            })}\n\n            {pop?<CreateForm>\n                <Form>\n                    <input type=\"text\" name=\"Name\" onChange={handleForm(\"task_name\")}  placeholder=\"Task..\"/>\n                    <div className=\"error\">{errorMessagename}</div>\n                    <input type=\"time\" onChange={handleForm(\"time\")}></input>\n                    <label htmlFor=\"cars\">Choose Date:</label>\n                    <select name=\"cars\" id=\"cars\" onChange={handleForm(\"date\")}>\n                        <option value=\"none\">--</option>\n                        {dates.map((item,i)=><option key={i} value={item}>{item}</option>)}  \n                    </select>\n                    <label htmlFor=\"cars\">Choose Category:</label>\n                    <select  onChange={handleForm(\"category\")}>\n                        <option value=\"none\">--</option>\n                        {Object.values(categories).map((item,i)=>{\n                            return(\n                                <option key={i} value={item.name}>{item.name}</option>\n                            )\n                        })}\n                    </select>\n                    <div className=\"error\">{errorMessagemain}</div>\n                    <input type=\"submit\" onClick={FormSubmit}></input>\n                </Form>\n            </CreateForm>:\"\"}\n\n            <CreateTaskBtn onClick={handlePopup}>\n                <p>{pop?`Cancel`:<i className=\"fas fa-plus\"> <span> Create new Task</span></i> }</p>\n            </CreateTaskBtn>\n\n            \n        </React.Fragment>\n        \n    )\n}\n\nexport default Categories;","import styled from \"styled-components\";\n\nexport const UpcomingFrame = styled.div`\n// background-color:red;\n    width:100%;\n    height:30%;\n    display:flex;\n    flex-direction:row;\n    justify-content:space-between;\n    // position:relative;\n`;\n\n\nexport const UpcomingBlock = styled.div`\n    background-color:rgb(247,246,248);\n    width:48%;\n    height:100%;\n    border-radius:15px;\n    display:grid;\n    display: grid;\n    grid-template-columns: 100%;\n    grid-template-rows: 30% 15% auto 15%;\n    padding:10px;\n\n\n\n\n    div{\n        margin-bottom:8px;\n        \n    }\n\n    div.icons{\n        color:${props=>props.color};\n        font-size:30px;\n    }\n\n    div.category{\n        color:grey;\n    }\n\n    div.task_name{\n        margin-top:5px;\n        font-weight:bold;\n        width:95%;\n        // height:25%;\n    }\n\n    div.duration{\n        font-size:13px;\n        // font-weight:600;\n        display:flex;\n        flex-direction:row;\n        justify-content:flex-start;\n        align-items:center;\n        // background-color:${props=>props.backcolor};\n\n        span{\n            margin-right:5px;\n            // border:1px solid ${props=>props.color};\n            // line-height:23px;\n            font-weight:bold;\n            border-radius:20px;\n            padding:7px 5px;\n            color:${props=>props.color};\n            background-color:${props=>props.backcolor};\n        }\n\n        span.Day{\n\n        }\n    }\n`;","import React, { useContext } from 'react'\nimport MainContent from '../../Provider/MainContent';\nimport { UpcomingFrame ,UpcomingBlock} from './UpcomingStyle';\n\nconst UpcomingCard = (props) => {\n    const activeDate = new Date();\n    const activeD = activeDate.getDate();\n    const activeYear = activeDate.getFullYear();\n    const activeMonth = activeDate.getMonth();\n\n    const day = [\"Sunday\", \"Monday\", \"Tuesday\" ,\"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n\n    const getDay = (date) => {\n        // console.log(date)\n        // console.log()\n        if(date===activeD){\n            return \"Today\";\n        }else{\n            return (day[new Date(activeYear,activeMonth,27).getDay()]);\n        }\n    }\n\n    console.log(props.color)\n\n    return (\n        <UpcomingBlock color={props.color} backcolor={props.backcolor}>\n            <div className=\"icons\">{props.icons}</div>\n            <div className=\"category\">{props.category}</div>\n            <div className=\"task_name\">{props.name}</div>\n            <div className=\"duration\">\n                <span className=\"Day\">{getDay(parseInt(props.date))}</span>\n                <span className=\"time\">{props.time}</span>\n            </div>\n        </UpcomingBlock>\n    )\n}\n\n\nconst Upcoming = () => {\n    const db = useContext(MainContent);\n    // \n    const alltasks = db.alltasks.filter((item)=>{\n        if(!item.done){\n            return true;\n        }else{\n            return false;\n        }\n    });\n    // const colors = [\"#DD6230\",\"#1FC0C0\"];\n    const icons = [<i className=\"fab fa-gg-circle\"></i>,<i className=\"fab fa-stumbleupon-circle\"></i>];\n    const backc = {General:\"rgba(212, 227, 255)\",Meeting:\"rgb(248,231,236)\",Trip:\"rgb(228,245,246)\"};\n\n    \n    \n\n\n    return (\n        <UpcomingFrame>\n            {\n                alltasks.map((item,i)=>{\n                    if(i<2 && !item.done){\n                    return (\n                        <UpcomingCard key = {i}\n                            name={item.task_name} time={item.time} category={item.category} date={item.date} color={db.state[item.category].color} \n                            icons= {icons[i]} backcolor={backc[item.category]}>  \n                        </UpcomingCard>\n                        \n                    )}else{\n                        return \"\";\n                    }\n                })\n            }\n        </UpcomingFrame>\n    )\n}\n\nexport default Upcoming;\n","import styled from \"styled-components\";\n\nexport const CircularFrame = styled.div`\n    height:30%;\n    width:100%;\n    background-color:rgb(247,246,248);\n    margin:25px 0px;\n    border-radius:20px;\n    display:flex;\n    flex-direction:row;\n    justify-content:space-between;\n    align-items:center;\n    transform:scale(1);\n    transition: all .2s ease-in-out;\n\n    :hover{\n        transform:scale(1.1);\n        box-shadow: 5px 5px 20px 5px rgb(196,205,221);\n    }\n\n    \n\n\n    div.circle{\n        height:100%;\n        display:flex;\n        flex-direction:column;\n        justify-content:center;\n        align-items:center;\n        width:45%;\n        padding:5px;\n    }\n\n    div.details{\n        height:100%;\n        // background-color:red;\n        width:55%;\n        display:flex;\n        flex-direction:column;\n        justify-content:center;\n        align-items:center;\n\n        .detmain{\n            height:55%;\n            width:80%;\n            // background-color:pink;\n            display:flex;\n            flex-direction:column;\n            justify-content:space-around;\n        }\n    }\n\n`;\n\nexport const Details = styled.div`\n    width:100%;\n    height:30%;\n    // background-color:yellow;\n    display:grid;\n    grid-template-columns: 15% auto 25%;\n    grid-template-rows: 100%;\n\n    span{\n        align-self:center;\n    }\n\n    span.dot{\n        justify-self:center;\n    }\n\n    span.cat{\n        letter-spacing:1.3px;\n        font-weight:600;\n        font-size:14px;\n        // color:grey;\n    }\n\n    span.per{\n        align-self:center;\n        font-size:12px;\n        font-weight:bold;\n        color:grey;\n    }\n`;","import React ,{useContext} from 'react';\nimport {CircularProgressbarWithChildren,\n    buildStyles} from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport MainContent from '../../Provider/MainContent';\nimport  {CircularFrame,Details} from './CircularStyle';\n\nconst Det = (props) => {\n    return(\n        <Details>\n            <span className=\"dot\" style={{width:\"10px\",height:\"10px\",backgroundColor:props.color,borderRadius:50}}></span>\n            <span className=\"cat\">{props.name}</span>\n            <span className=\"per\">{props.percent} %</span>\n        </Details>\n    )\n\n}\n\nconst Circular = () => {\n\n    const db =useContext(MainContent);\n    const alltasks = db.alltasks;\n    // console.log(\"circular\");\n    const Categories = [\"General\",\"Meeting\",\"Trip\"];\n    const colors = [\"#306CDE\",\"#DD6230\",\"#1FC0C0\"];\n\n    const getcount = (cat) => {\n        let count =0;\n        let total = 0;\n        alltasks.forEach(element => {\n            if(element.category===cat && !element.done){\n                count+=1;\n                total+=1;\n            }else if(!element.done){\n                total+=1;\n            }\n        });\n\n        return (count/total)*100;\n    }\n\n    return(\n        <CircularFrame>\n            <div className=\"circle\" >\n                <CircularProgressbarWithChildren\n                    value={getcount(\"General\")}\n                    strokeWidth={7}\n                    styles={buildStyles({\n                    pathColor: \"#306CDE\",\n                    trailColor: \"transparent\"\n                    })}>\n                    \n                    <div style={{ width: \"75%\" }}>\n                        <CircularProgressbarWithChildren\n                            value={getcount(\"Meeting\")}\n                            strokeWidth={8}\n                            styles={buildStyles({\n                            pathColor: \"#DD6230\",\n                            trailColor: \"transparent\"\n                            })}\n                        >\n\n                        <div style={{ width: \"70%\" }}>\n                            <CircularProgressbarWithChildren\n                                value={getcount(\"Trip\")}\n                                strokeWidth={10}\n                                styles={buildStyles({\n                                pathColor:\"#1FC0C0\",\n                                trailColor: \"transparent\"\n                                })}\n                            />\n                    </div>\n\n                        </CircularProgressbarWithChildren>\n                    </div>\n                </CircularProgressbarWithChildren>\n            </div>\n\n            <div className=\"details\">\n                <div className=\"detmain\">\n                    {\n                        Categories.map((item,i)=>{\n                            return(\n                                <Det key= {i} color={colors[i]} name={item} percent = {Math.floor(getcount(item))}></Det>\n                            )\n                        })\n                    }\n                </div>\n            </div>\n        </CircularFrame>\n    )\n}\n\nexport default Circular;","import styled from \"styled-components\"\n\nexport const AllFrame = styled.div`\n    width:100%;\n    height:40%;\n    background-color:rgba(247,246,248,.8);\n    border-radius:15px; \n    display:flex;\n    flex-direction:column;\n    justify-content:flex-start;\n    padding:10px; \n    overflow:scroll;\n\n    ::-webkit-scrollbar{\n        display:none;\n    }\n`;\n\nexport const Task = styled.div`\n    width:100%;\n    // background-color:red;\n    margin-bottom:5px;\n    display:flex;\n    flex-direction:row;\n    justify-content:flex-start;\n    align-items:center;\n    padding:5px 0px; \n\n\n    input{\n        width:15%;\n        height:40%;\n        // border:1px solid grey;\n    }\n\n    p{\n        width:100%;\n        padding:10px;\n        border-bottom:1px solid rgb(143, 143, 143);;\n        letter-spacing:1px;\n        color:black;\n    }\n\n`;","import React,{useContext} from 'react';\nimport MainContent from '../../Provider/MainContent';\nimport { AllFrame,Task } from './AlltasksStyle';\n\n\nconst Tasks = (props) => {\n    return(\n        <Task>\n            {!props.strike?<input type=\"checkbox\" onClick={()=>props.donefn(props.category,props.id)}></input>\n            :<input disabled type=\"checkbox\" onClick={()=>props.donefn(props.category,props.id)}></input>}\n            <p>{props.strike?<strike>{props.name}</strike>:props.name}</p>\n        </Task>\n    )\n}\n\nconst Alltasks = ()=>{\n    \n    const db = useContext(MainContent);\n    const donfn = db.getDone;\n    const alltasks = db.alltasks;\n    const activeDate = new Date().getDate();\n\n    const todaynst = alltasks.filter((item)=>{\n        if(parseInt(item.date)===activeDate && !item.done){\n            return (\n                <p>karan</p>\n            )\n        }else{\n            return false;\n        }\n    })\n\n    const todayst = alltasks.filter((item)=>{\n        if(parseInt(item.date)===activeDate && item.done){\n            return (\n                <p>karan</p>\n            )\n        }else{\n            return false;\n        }\n    })\n    \n    return (\n        <AllFrame>\n            {\n                todaynst.map((item,i)=>{\n                    return(\n                        <Tasks key={i} name={item.task_name} strike={false} category={item.category} donefn = {donfn} id={item.key}></Tasks>\n                    )\n                })\n            }\n\n            {\n                todayst.map((item,i)=>{\n                    return(\n                        <Tasks key={i} name={item.task_name} strike={true} donefn = {donfn} id={item.key}></Tasks>\n                    )\n                })\n            }\n\n        </AllFrame>\n    )\n}\n\nexport default Alltasks;","import styled from \"styled-components\";\n\nexport const AllDateFrame = styled.div`\n    width:100%;\n    height:100%;\n    background-color:rgba(245,245,248,.8);\n    border-radius:15px; \n    display:flex;\n    flex-direction:column;\n    justify-content:flex-start;\n    padding:20px 10px;\n    \n\n    div.dates{\n        width:100%;\n        height:65px;\n        border-radius:10px;\n        \n        display:flex;\n        flex-direction:row;\n        justify-content:space-between;\n    }\n\n    div.cal_frame{\n        width:100%;\n        height:100%;\n        // background-color:red;\n        overflow:scroll !important;\n        margin-top:8%;\n\n        ::-webkit-scrollbar{\n            display:none;\n        }\n    }\n`;\n\nexport const DateFrame = styled.div`\n    width:18%;\n    height:100%;\n    background-color:${props=>props.backco};\n    padding:0px  7px;\n    border-radius:18px;\n    display:flex;\n    flex-direction:column;\n    justify-content:center;\n    align-items:center;\n    color:${props=>props.color};\n    \n    p{\n        padding:3px;\n    }\n\n    p.date{\n        font-weight:bold;\n        font-size:14px;\n    }\n\n    p.day{\n        color:${props=>props.colorday};\n        letter-spacing:.8px;\n    }\n\n`;\n\nexport const CallFrameBlock =styled.div`\n    width:100%;\n    height:30%;\n    // background-color:red;\n    \n    display:flex;\n    flex-direction:row;\n    justify-content:space-between;\n    margin-bottom:3%;\n\n    div.time{\n        width:15%;\n        height:100%;\n        // background-color:pink\n        color:grey;\n        font-size:15px;\n        \n    }\n\n    div.task_frame{\n        // position:realtive;\n        width:80%;\n        height:100%;\n        // background-color:red;\n        padding-top:15px;\n        \n\n        div.task{\n            width:210px;\n            height:115px;\n            background-color:rgb(254,254,254);\n            border-top-left-radius: 5px;\n            border-top-right-radius: 15px;\n            border-bottom-left-radius: 5px;\n            border-bottom-right-radius: 15px;\n            border-left:8px solid ${props=>props.color};\n            transition: all .2s ease-in-out;\n            padding:20px 10px;\n            box-shadow: 5px 5px 20px 5px rgb(206,212,227);\n\n            :hover{\n                // transform:scale(1.1);\n                box-shadow: 5px 5px 20px 5px rgb(165, 175, 199);\n                transform:scale(1.04) translateX(10px);\n            }\n\n            .cat{\n                text-transform:uppercase;\n                font-size:13px;\n                font-weight:bold;\n                color: ${props=>props.color};\n                margin-bottom:3%;\n            }\n\n            .name{\n                letter-spacing:.8px;\n                font-weight:400;\n            }\n        }\n    }\n`;","import React,{useContext,useState,useEffect} from 'react';\nimport MainContent from '../../Provider/MainContent';\nimport { AllDateFrame, DateFrame,CallFrameBlock } from './AllDatesStyle';\nimport './AllDates.css';\n\n\nconst CalFrame = (props) => {\n\n    console.log(props.backcolor)\n    return(\n        <CallFrameBlock color={props.color} backcolor={props.backcolor}>\n            <div className=\"time\">{props.time}</div>\n            <div className=\"task_frame\">\n                <div className=\"task\">\n                    <p className=\"cat\">{props.cate}</p>\n                    <p className=\"name\">{props.done?<strike>{props.name}</strike>:props.name}</p>\n                </div>\n            </div>\n        </CallFrameBlock>\n    )\n}\n\nconst Dates = (props) => {\n    const day = [\"Sun\", \"Mon\", \"Tue\" ,\"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n\n    \n    return (\n        <DateFrame  onClick={props.actfn(props.id,props.date)} backco={`${props.act===props.id?\"#306CDE\":\"#F0F4F0\"}`} \n        color={props.act===props.id?\"white\":\"black\"} colorday={props.act===props.id?\"white\":\"grey\"}>\n            <p className=\"date\">{props.date}</p>\n            <p className=\"day\">{day[(props.date)%7]}</p>\n        </DateFrame>\n    )\n}\n\nconst AllDates = () => {\n    const db = useContext(MainContent);\n    const alltasks = db.alltasks;\n    const current_time = new Date();\n    let activeDate = current_time.getDate();\n    let activeMonth = current_time.getMonth();\n    let activeYear = current_time.getFullYear();\n    const daysInCurrentMonth = 40 - new Date(activeYear,activeMonth,40).getDate();\n\n    const backc = {General:\"#D4E3FF\",Meeting:\"#F8E7EC\",Trip:\"#e4f5f6\"};\n\n    const[active,setActive] = useState(0);\n    // const day\n    \n    let datetasks = [];\n\n    const setAct = (id,date) =>() => {\n        setActive(id);\n    }\n\n    \n\n\n    return(\n        <AllDateFrame>\n            <div className=\"dates\">\n                {\n                    alltasks.map((item,i)=>{\n                        if(i<5){\n                            return <Dates key={i} id={i} act={active} tasks={datetasks} actfn={setAct} date={(activeDate+i===daysInCurrentMonth?daysInCurrentMonth:(activeDate+i)%(daysInCurrentMonth))}></Dates>\n                        }else{\n                            return \"\";\n                        }\n                    })\n                }\n            </div>\n            <div className=\"cal_frame\">\n                {\n                    alltasks.filter((item)=>{\n                        if(parseInt(item.date) === parseInt(activeDate+active) && !item.done){\n                            console.log(item)\n                            return true\n                        }else{\n                            return false;\n                        }\n                    }).map((item,i)=>{\n                        return(\n                            <CalFrame key={i} time={item.time} name={item.task_name} cate={item.category} done={false} color={db.state[item.category].color} backcolor={backc[item.category]} ></CalFrame>\n                        )\n                    })\n                }\n                {\n                    alltasks.filter((item)=>{\n                        if(parseInt(item.date) === parseInt(activeDate+active) && item.done){\n                            console.log(item)\n                            return true\n                        }else{\n                            return false;\n                        }\n                    }).map((item,i)=>{\n                        return(\n                            <CalFrame key={i} time={item.time} name={item.task_name} cate={item.category} done={true} color={\"grey\"} backcolor={backc[item.category]} ></CalFrame>\n                        )\n                    })\n                }\n            </div>\n        </AllDateFrame>\n    )\n}\n\nexport default AllDates;","import React from 'react';\nimport { MainS,Container,Left,Center,Right} from './mainstyle';\nimport ContentProvider from './Provider/MainContentProvider';\nimport Categories from './Left/Categories/Categories';\nimport Upcoming from './Center/Upcoming/Upcoming';\nimport Circular from './Center/Circular/Circular';\nimport Alltasks from './Center/Alltasks/Alltasks';\nimport AllDates from './Right/AllDates/AllDates';\n\n\nconst Main = () => {\n    return (\n        <MainS>\n            <ContentProvider>\n                <Container>\n                    <Left>\n                        <Categories></Categories>\n                    </Left>\n                    <Center>\n                        <Upcoming></Upcoming>\n                        <Circular></Circular>\n                        <Alltasks></Alltasks>\n                    </Center>\n                    <Right>\n                        <AllDates></AllDates>\n                    </Right>\n                </Container>\n            </ContentProvider>\n        </MainS>\n    )\n}\n\nexport default Main;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Main from './Components/main';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Main></Main>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}